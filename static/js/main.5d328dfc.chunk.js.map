{"version":3,"sources":["logo.svg","Three/script.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","THREE","window","require","camera","scene","renderer","controls","plane","mouse","raycaster","rollOverMesh","rollOverMaterial","color","isShiftDown","objects","STLLoader","init","PerspectiveCamera","innerWidth","innerHeight","position","set","lookAt","OrbitControls","Scene","background","Color","receiveShadow","rollOverGeo","BoxBufferGeometry","MeshBasicMaterial","opacity","transparent","Mesh","add","gridHelper","GridHelper","Raycaster","Vector2","geometry","PlaneBufferGeometry","rotateX","Math","PI","visible","push","ambientLight","AmbientLight","directionalLight","DirectionalLight","castShadow","shadow","mapSize","width","height","near","far","left","right","top","bottom","WebGLRenderer","antialias","shadowMap","enabled","type","PCFSoftShadowMap","base","material","dimensions","Vector3","brickGeo","Geometry","cubeGeo","BoxGeometry","cylinderGeo","CylinderGeometry","mergeMesh","i","x","j","z","cylinder","setX","setY","setZ","mergeVertices","initBase","MeshStandardMaterial","metalness","roughness","PlaneGeometry","texture","ImageUtils","loadTexture","process","MeshLambertMaterial","map","side","DoubleSide","rotation","degToRad","document","querySelector","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","addEventListener","onDocumentMouseMove","onDocumentMouseDown","onDocumentKeyDown","onDocumentKeyUp","onWindowResize","event","preventDefault","clientX","clientY","setFromCamera","intersects","intersectObjects","length","intersect","copy","point","face","normal","divideScalar","floor","multiplyScalar","addScalar","animate","object","remove","splice","indexOf","cubeColor","random","voxel","createMesh","aspect","updateProjectionMatrix","keyCode","update","render","App","react_default","a","createElement","className","src","Component","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d328dfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/* Edit from three.js interactive voxelpainter example\nhttps://github.com/mrdoob/three.js/blob/master/examples/webgl_interactive_voxelpainter.html */\n\nvar THREE = window.THREE = require('three');\nrequire('three/examples/js/loaders/STLLoader');\nrequire('three/examples/js/controls/OrbitControls');\n\n//Current: random color for bricks\nvar color = [\"#fac70a\",\"#fac70a\",\"#ff0000\",\"#ff7b06\"];\n\nvar camera, scene, renderer;\nvar controls;\nvar plane;\nvar mouse, raycaster, isShiftDown = false;\n\nvar rollOverMesh, rollOverMaterial;\nvar cubeGeo, cubeMaterial;\nvar objects = [];\nvar loader = new THREE.STLLoader();\n \n\nfunction init() {\n    camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );\n    camera.position.set(500, 800, 1300);\n    camera.lookAt(0,0,0)\n    controls = new THREE.OrbitControls( camera );\n \n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x1e3959);\n    scene.receiveShadow = true;\n\n    //roll-over helpers\n    var rollOverGeo = new THREE.BoxBufferGeometry( 50, 50, 50 );\n    rollOverMaterial = new THREE.MeshBasicMaterial( { color: 0xfac70a, opacity: 0.5, transparent: true } );\n    rollOverMesh = new THREE.Mesh( rollOverGeo, rollOverMaterial );\n    scene.add( rollOverMesh );\n\n    //grid\n    var gridHelper = new THREE.GridHelper(1000, 20, \"#ffffff\",\"#d0d0d0\");\n    scene.add(gridHelper);\n\n    // raycaster\n    raycaster = new THREE.Raycaster();\n    mouse = new THREE.Vector2();\n    var geometry = new THREE.PlaneBufferGeometry( 1000, 1000 );\n    geometry.rotateX( - Math.PI / 2 );\n    plane = new THREE.Mesh( geometry, new THREE.MeshBasicMaterial( { visible: false } ) );\n    scene.add( plane );\n    objects.push( plane );\n\n    // lights\n    var ambientLight = new THREE.AmbientLight( 0xffffff);\n    scene.add( ambientLight );\n\n    var directionalLight = new THREE.DirectionalLight( 0xffffff, 0.2);\n    directionalLight.position.set( 400, 800, 500);\n    directionalLight.castShadow = true; \n    scene.add( directionalLight );\n\n    //Set up shadow properties for the light\n    directionalLight.shadow.mapSize.width = 4096*2;  // default\n    directionalLight.shadow.mapSize.height = 4096*2; // default\n    directionalLight.shadow.camera.near = -0.5;    // default\n    directionalLight.shadow.camera.far = 1500;     // default\n    directionalLight.shadow.camera.left = -700;\n    directionalLight.shadow.camera.right = 700;\n    directionalLight.shadow.camera.top = 500;\n    directionalLight.shadow.camera.bottom = -600;\n\n    // var helper = new THREE.CameraHelper( directionalLight.shadow.camera );\n    // scene.add( helper );\n\n    // var spotLight = new THREE.DirectionalLight( 0xffffff, 0.7);\n    // spotLight.position.set( -1000, 1500, -500 );\n    // scene.add( spotLight );\n    // spotLight.shadow.mapSize.width = 4096;\n    // spotLight.shadow.mapSize.height = 4096;\n    // spotLight.penumbra = 0.5;\n    // spotLight.decay = 2;\n\n    // var helper = new THREE.CameraHelper( spotLight.shadow.camera );\n    // scene.add( helper );\n\n    renderer = new THREE.WebGLRenderer( { antialias: true } );\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n       //Add base\n    var baseMaterial = new THREE.MeshStandardMaterial({\n        //\"red\"\n          color: \"#E5DFD1\",\n          metalness: 0.1,\n        roughness: 0.5,\n        });\n    var base = initBase(baseMaterial)\n    base.castShadow = true;\n    base.receiveShadow = true;\n    base.position.set(0,-12.5,0)\n    scene.add(base);\n\n    var geometry = new THREE.PlaneGeometry( 1000, 1000, 32 );\n   \n    var sig_url = process.env.PUBLIC_URL + '/signature.png'\n    var texture = THREE.ImageUtils.loadTexture( sig_url );\n    var material = new THREE.MeshLambertMaterial({ map : texture });\n    var plane = new THREE.Mesh( geometry, material );\n    plane.material.side = THREE.DoubleSide;\n\n    plane.rotation.set(THREE.Math.degToRad(90),0,0)\n    plane.position.set(0,-25,0)\n    scene.add( plane );\n\n    var div = document.querySelector('.World')\n    renderer.setPixelRatio( window.devicePixelRatio );\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    document.querySelector('.World').appendChild( renderer.domElement );\n    document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n    document.addEventListener( 'mousedown', onDocumentMouseDown, false );\n    document.addEventListener( 'keydown', onDocumentKeyDown, false );\n    document.addEventListener( 'keyup', onDocumentKeyUp, false );\n\n    //listen to window size change\n    window.addEventListener( 'resize', onWindowResize, false ); \n}\n\nfunction onDocumentMouseMove( event ) {\n    event.preventDefault();\n    mouse.set( ( event.clientX / window.innerWidth ) * 2 - 1, - ( event.clientY / window.innerHeight ) * 2 + 1 );\n    raycaster.setFromCamera( mouse, camera );\n    var intersects = raycaster.intersectObjects( objects );\n    if ( intersects.length > 0 ) {\n        var intersect = intersects[ 0 ];\n        rollOverMesh.position.copy( intersect.point ).add( intersect.face.normal );\n        rollOverMesh.position.divideScalar( 50 ).floor().multiplyScalar( 50 ).addScalar( 25 );\n    }\n    animate();\n}\n\nfunction onDocumentMouseDown( event ) {\n    event.preventDefault();\n    mouse.set( ( event.clientX / window.innerWidth ) * 2 - 1, - ( event.clientY / window.innerHeight ) * 2 + 1 );\n    raycaster.setFromCamera( mouse, camera );\n    var intersects = raycaster.intersectObjects( objects );\n    if (intersects.length > 0) {\n        var intersect = intersects[0];\n        // delete cube\n        if (isShiftDown) {\n            if (intersect.object !== plane) {\n                scene.remove(intersect.object);\n                objects.splice(objects.indexOf(intersect.object), 1);\n            }\n            // create cube\n        } else {\n            // var url = process.env.PUBLIC_URL + '/3003.stl'\n            // loader.load(url, geometry => {\n            //     var material = new THREE.MeshStandardMaterial({\n            //         //\"red\"\n            //           color: \"#ff0000\",\n            //           // specular: CSSToHex(shadeColor(color, -20)),\n            //           // shininess: 5,\n            //           metalness: 0.4,\n            //           roughness: 0.5,\n            //         });\n            //     var voxel = new THREE.Mesh(geometry, material);\n            var cubeColor = color[Math.floor(Math.random() * color.length)]; \n            var material = new THREE.MeshStandardMaterial({\n            //\"red\"\n                color: cubeColor,\n                metalness: 0.1,\n                roughness: 0.5,\n            });\n            var voxel = createMesh(material)\n            // voxel.rotation.set( -Math.PI / 2 ,0, 0);\n            voxel.castShadow = true;\n            voxel.receiveShadow = true;\n            voxel.position.copy( intersect.point ).add( intersect.face.normal );\n            voxel.position.divideScalar( 50 ).floor().multiplyScalar( 50 ).addScalar( 25.5 );\n            scene.add(voxel);\n            objects.push( voxel );\n            \n\n        }\n        animate();\n    }\n}\n\n\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n}\n \n\nfunction onDocumentKeyDown( event ) {\n    switch ( event.keyCode ) {\n        case 16: isShiftDown = true; \n        rollOverMesh.visible = false;\n        break;\n    }\n}\n\nfunction onDocumentKeyUp( event ) {\n    switch ( event.keyCode ) {\n        case 16: isShiftDown = false; \n        rollOverMesh.visible = true;\n        break;\n    }\n}\n\nfunction animate() {\n    // requestAnimationFrame( animate );\n    controls.update();\n    renderer.render( scene, camera );\n}\nfunction initBase(material) {\n    //20*20\n    var base = 50;\n    let width = 50*20;\n    let height = 25;\n    let depth = 50*20;\n    let knobSize = 16;\n    var knobHeight = 10;\n    var dimensions = new THREE.Vector3(20,1,20);\n    var brickGeo = new THREE.Geometry();\n    var cubeGeo = new THREE.BoxGeometry( width, height, depth);\n    var cylinderGeo = new THREE.CylinderGeometry( knobSize, knobSize, knobHeight, 32);\n    brickGeo.mergeMesh(new THREE.Mesh(cubeGeo));\n\n    for ( var i = 0; i < dimensions.x; i++ ) {\n        for ( var j = 0; j < dimensions.z; j++ ) {\n            //hah\n          var cylinder = new THREE.Mesh(cylinderGeo, material);\n          cylinder.position.setX(base * i - ((dimensions.x - 1) * base / 2));\n          cylinder.position.setY(height/2 + knobHeight/2);  // TODO to be reworked\n          cylinder.position.setZ(base * j - ((dimensions.z - 1) * base / 2));\n\n          cylinder.castShadow = true;\n          cylinder.receiveShadow = true;\n          brickGeo.mergeMesh( cylinder );\n        }\n    }\n    brickGeo.mergeVertices();\n    brickGeo.castShadow = true;\n    brickGeo.receiveShadow = true;\n    var brick = new THREE.Mesh(brickGeo, material)\n    return brick;\n}\nfunction createMesh(material) {\n    //defalut: 1*1\n    var base = 50;\n    let width = 50;\n    let height = 50;\n    let depth = 50;\n    let knobSize = 16;\n    var knobHeight = 10;\n    var dimensions = new THREE.Vector3(1,1,1);\n    var brickGeo = new THREE.Geometry();\n    var cubeGeo = new THREE.BoxGeometry( width, height, depth );\n    var cylinderGeo = new THREE.CylinderGeometry( knobSize, knobSize, knobHeight, 20);\n    brickGeo.mergeMesh(new THREE.Mesh(cubeGeo));\n\n    for ( var i = 0; i < dimensions.x; i++ ) {\n        for ( var j = 0; j < dimensions.z; j++ ) {\n            //hah\n          var cylinder = new THREE.Mesh(cylinderGeo, material);\n          cylinder.position.setX(base * i - ((dimensions.x - 1) * base / 2));\n          cylinder.position.setY(height/2+knobHeight/2);  // TODO to be reworked\n          cylinder.position.setZ(base * j - ((dimensions.z - 1) * base / 2));\n\n          cylinder.castShadow = true;\n          cylinder.receiveShadow = true;\n          brickGeo.mergeMesh( cylinder );\n        }\n    }\n    brickGeo.mergeVertices();\n    brickGeo.castShadow = true;\n    brickGeo.receiveShadow = true;\n    var brick = new THREE.Mesh(brickGeo, material)\n    return brick;\n    \n    \n}\n\nexport {init, animate};","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {init,animate} from './Three/script.js'\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tinit();\n\t\tanimate();\n\t}\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Toolbar\">\n          <div className=\"logo\">\n            <img className='logoimg' src={process.env.PUBLIC_URL + '/lego.png'}/>\n          </div>\n          <div className='appName'> Bricks</div>\n        </div>\n        \n        <div className=\"World\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}